// *** This code was generated by a T4 template. ***

using System.Web.Mvc;

namespace TaconiteMvc
{
  /// <summary>
  /// Starting point for building a <see cref="TaconiteResult"/>.
  /// </summary>
  public static class Taconite
  {

    public static TaconiteMvc.Syntax.IAddClassToTargetSyntax AddClass(string className)
    {
      return (new TaconiteResult()).AddClass(className);
    }


    public static TaconiteMvc.Syntax.IAddClassToTargetSyntax AddClasses(params string[] classNames)
    {
      return (new TaconiteResult()).AddClasses(classNames);
    }

    /// <summary>
    /// Appends HTML content to the elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IAppendCommandToTargetSyntax AppendContent(string html)
    {
      return (new TaconiteResult()).AppendContent(html);
    }

    /// <summary>
    /// Appends the content from a <see cref="PartialViewResult"/> to the elements
    /// matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IAppendCommandToTargetSyntax AppendContent(System.Web.Mvc.PartialViewResult partialViewResult)
    {
      return (new TaconiteResult()).AppendContent(partialViewResult);
    }

    /// <summary>
    /// Appends a partial view to the elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IAppendCommandToTargetSyntax AppendPartialView()
    {
      return (new TaconiteResult()).AppendPartialView();
    }

    /// <summary>
    /// Appends a partial view, using the specified model, to the elements matching 
    /// a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IAppendCommandToTargetSyntax AppendPartialView(object model)
    {
      return (new TaconiteResult()).AppendPartialView(model);
    }

    /// <summary>
    /// Appends a partial view, using the specified view name, to the elements
    /// matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IAppendCommandToTargetSyntax AppendPartialView(string viewName)
    {
      return (new TaconiteResult()).AppendPartialView(viewName);
    }

    /// <summary>
    /// Appends a partial view, using the specified view name and model, to the
    /// elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IAppendCommandToTargetSyntax AppendPartialView(string viewName, object model)
    {
      return (new TaconiteResult()).AppendPartialView(viewName, model);
    }

    /// <summary>
    /// Executes JavaScript.
    /// </summary>
    public static TaconiteMvc.TaconiteResult Execute(string javascript)
    {
      return (new TaconiteResult()).Execute(javascript);
    }

    /// <summary>
    /// Executes JavaScript.
    /// </summary>
    public static TaconiteMvc.TaconiteResult Execute(System.Web.Mvc.JavaScriptResult javaScriptResult)
    {
      return (new TaconiteResult()).Execute(javaScriptResult);
    }

    /// <summary>
    /// Executes a jQuery plugin.
    /// </summary>
    public static TaconiteMvc.Syntax.IPluginCommandForTargetSyntax ExecutePlugin(string command)
    {
      return (new TaconiteResult()).ExecutePlugin(command);
    }


    public static TaconiteMvc.TaconiteResult FadeIn(string selector)
    {
      return (new TaconiteResult()).FadeIn(selector);
    }


    public static TaconiteMvc.TaconiteResult FadeOut(string selector)
    {
      return (new TaconiteResult()).FadeOut(selector);
    }


    public static TaconiteMvc.TaconiteResult Hide(string selector)
    {
      return (new TaconiteResult()).Hide(selector);
    }


    public static TaconiteMvc.Syntax.IInsertCommandBeforeOrAfterTargetSyntax InsertContent(System.Web.Mvc.PartialViewResult partialViewResult)
    {
      return (new TaconiteResult()).InsertContent(partialViewResult);
    }


    public static TaconiteMvc.Syntax.IInsertCommandBeforeOrAfterTargetSyntax InsertContent(string html)
    {
      return (new TaconiteResult()).InsertContent(html);
    }


    public static TaconiteMvc.Syntax.IInsertCommandBeforeOrAfterTargetSyntax InsertPartialView()
    {
      return (new TaconiteResult()).InsertPartialView();
    }


    public static TaconiteMvc.Syntax.IInsertCommandBeforeOrAfterTargetSyntax InsertPartialView(string viewName)
    {
      return (new TaconiteResult()).InsertPartialView(viewName);
    }


    public static TaconiteMvc.Syntax.IInsertCommandBeforeOrAfterTargetSyntax InsertPartialView(object model)
    {
      return (new TaconiteResult()).InsertPartialView(model);
    }


    public static TaconiteMvc.Syntax.IInsertCommandBeforeOrAfterTargetSyntax InsertPartialView(string viewName, object model)
    {
      return (new TaconiteResult()).InsertPartialView(viewName, model);
    }

    /// <summary>
    /// Prepends HTML content to the elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IPrependCommandToTargetSyntax PrependContent(string html)
    {
      return (new TaconiteResult()).PrependContent(html);
    }

    /// <summary>
    /// Prepends the content from a <see cref="PartialViewResult"/> to the elements
    /// matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IPrependCommandToTargetSyntax PrependContent(System.Web.Mvc.PartialViewResult partialViewResult)
    {
      return (new TaconiteResult()).PrependContent(partialViewResult);
    }

    /// <summary>
    /// Prepends a partial view to the elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IPrependCommandToTargetSyntax PrependPartialView()
    {
      return (new TaconiteResult()).PrependPartialView();
    }

    /// <summary>
    /// Prepends a partial view, using the specified model, to the elements matching 
    /// a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IPrependCommandToTargetSyntax PrependPartialView(object model)
    {
      return (new TaconiteResult()).PrependPartialView(model);
    }

    /// <summary>
    /// Prepends a partial view, using the specified view name, to the elements
    /// matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IPrependCommandToTargetSyntax PrependPartialView(string viewName)
    {
      return (new TaconiteResult()).PrependPartialView(viewName);
    }

    /// <summary>
    /// Prepends a partial view, using the specified view name and model, to the
    /// elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IPrependCommandToTargetSyntax PrependPartialView(string viewName, object model)
    {
      return (new TaconiteResult()).PrependPartialView(viewName, model);
    }


    public static TaconiteMvc.TaconiteResult Remove(string selector)
    {
      return (new TaconiteResult()).Remove(selector);
    }


    public static TaconiteMvc.Syntax.IRemoveAttributeCommandFromTargetSyntax RemoveAttribute(string attribute)
    {
      return (new TaconiteResult()).RemoveAttribute(attribute);
    }


    public static TaconiteMvc.Syntax.IRemoveAttributeCommandFromTargetSyntax RemoveAttributes(params string[] attributes)
    {
      return (new TaconiteResult()).RemoveAttributes(attributes);
    }


    public static TaconiteMvc.Syntax.IRemoveClassCommandFromTargetSyntax RemoveClass(string className)
    {
      return (new TaconiteResult()).RemoveClass(className);
    }


    public static TaconiteMvc.Syntax.IRemoveClassCommandFromTargetSyntax RemoveClasses(params string[] classNames)
    {
      return (new TaconiteResult()).RemoveClasses(classNames);
    }

    /// <summary>
    /// Replaces the elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IReplaceCommandWithContentSyntax Replace(string selector)
    {
      return (new TaconiteResult()).Replace(selector);
    }

    /// <summary>
    /// Replaces the content of elements matching a jQuery selector.
    /// </summary>
    public static TaconiteMvc.Syntax.IReplaceContentsOfCommandWithContentSyntax ReplaceContentsOf(string selector)
    {
      return (new TaconiteResult()).ReplaceContentsOf(selector);
    }


    public static TaconiteMvc.Syntax.ISetAttributeCommandForTargetSyntax SetAttribute(string name, object value)
    {
      return (new TaconiteResult()).SetAttribute(name, value);
    }


    public static TaconiteMvc.Syntax.ISetAttributeCommandForTargetSyntax SetAttributes(object attributes)
    {
      return (new TaconiteResult()).SetAttributes(attributes);
    }


    public static TaconiteMvc.TaconiteResult Show(string selector)
    {
      return (new TaconiteResult()).Show(selector);
    }


    public static TaconiteMvc.TaconiteResult SlideDown(string selector)
    {
      return (new TaconiteResult()).SlideDown(selector);
    }


    public static TaconiteMvc.TaconiteResult SlideUp(string selector)
    {
      return (new TaconiteResult()).SlideUp(selector);
    }

  }
}

